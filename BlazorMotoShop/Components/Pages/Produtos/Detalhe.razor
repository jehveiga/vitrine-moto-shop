@page "/produtos/detalhes/{id:int}"
@rendermode InteractiveServer
@inject ILogger<Categoria> Logger


@if (Produto is null)
{
    <p class="text-light">Produto não encontrado</p>
}
else
{
    <div class="container">
        <div class="row">
            <div class="col-sm-3">
                <img src="uploads/@Produto.ImageUrl" alt="Imagem moto detalhes" />
            </div>
            <div class="col-sm-9 mt-3">
                <div class="row text-center justify-content-center">
                    <div class="col-12 col-sm-6 text-info">
                        <h3>@Produto.Nome</h3>
                    </div>
                </div>
                <div class="row text-center justify-content-center">
                    <div class="col-4 col-sm-6 text-light mt-3">
                        @Produto.Preco.ToString("C")
                    </div>
                </div>
                <div class="row justify-content-center">
                    <div class="col-6 col-sm-8 text-light mt-3">
                        <p>@Produto.Descricao</p>
                    </div>
                </div>
                <div class="row text-center justify-content-center">
                    <div class="col-8 col-sm-10 text-light mt-3 ">
                        <p>Categoria: @Produto.Categoria.Nome</p>
                    </div>
                </div>
                <div class="row text-center justify-content-center">
                    <div class="col-8 col-sm-10 mt-2 ">
                        <a href="produtos" class="btn btn-outline-warning">
                            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-return-left" viewBox="0 0 16 16">
                                <path fill-rule="evenodd" d="M14.5 1.5a.5.5 0 0 1 .5.5v4.8a2.5 2.5 0 0 1-2.5 2.5H2.707l3.347 3.346a.5.5 0 0 1-.708.708l-4.2-4.2a.5.5 0 0 1 0-.708l4-4a.5.5 0 1 1 .708.708L2.707 8.3H12.5A1.5 1.5 0 0 0 14 6.8V2a.5.5 0 0 1 .5-.5" />
                            </svg>
                            Voltar
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@code {
    [Inject]
    public IProdutoRepository? ProdutoRepository { get; set; }

    [Parameter]
    public int Id { get; set; }

    protected Produto? Produto { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            Produto = await ProdutoRepository.ObterProdutoComCategoria(Id);
        }
        catch (Exception ex)
        {
            Logger.LogInformation($"Falha no servidor! Error: {ex.Message}");
            throw;
        }
    }
}
